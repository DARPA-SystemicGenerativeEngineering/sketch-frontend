assume N>=2 && N<=3;

struct LState {
	int n;
	int [2][n <: 3] a;
}

void spec(ref LState s) {
	s.a[0][0] = 0;
	s.a[0][1] = 1;
	for (int i=2; i<s.n; ++i) {
		int t = i/2;
		int x = i%2;
		s.a[t][x] = i;
	}
}

void specW(int N, ref int[2] A) {
	LState s = new LState(n=N);
	spec(s);
	A = s.a[0];
}

void main(ref LState s) {
	for (int i=0; i<s.n; ++i) {
		int t = i/2;
		int x = i%2;
		s.a[t][x] = i;
	}
}

void mainW(int N, ref int[2] A) implements specW {
	LState s = new LState(n=N);
	main(s);
	A = s.a[0];
}