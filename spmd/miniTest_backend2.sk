/*
 * triggers a bug in backend: Error: This variable already existed!!
 * (duplicated variable: H__3, there is a bug when struct used with holes)
 */
pragma options "-p preproc --bnd-inbits 2 --bnd-cbits 4 --bnd-unroll-amnt 16 --bnd-inline-amnt 3 --beopt:-bndwrand 50  --bnd-arr-size 16 --be:ufunSymmetry  --beopt:simplifycex NOSIM --beopt:simiters 3"; //  --be:showDAG

struct LocalState {
	int len;
	int glen;
	int[len+glen*2] m;
}

LocalState movein(int rank, global int P, global int N, global int[N] mat) {
	int len = N/P;
	int glen = len/2;
	int[len+glen*2] m;
	int base1 = len*rank;
	for (int i=0; i<len; ++i) {
		m[glen*??+base1*??+i] = mat[glen*??+base1*??+i];  /* glen, base1 */
	}
	LocalState l = new LocalState(len=len, glen=glen, m=m);
	return l;
}


int spec(int P, int N, int[N] mat) {
	return movein(0, P, N, mat).glen;
}

int imp(int P, int N, int[N] mat) implements spec {
	LocalState l = movein(0, P, N, mat);
	return l.glen;
}