// $ANTLR 2.7.7 (2006-11-01): "StreamItParserFE.g" -> "StreamItParserFE.java"$

	package streamit.frontend;

	import streamit.frontend.nodes.*;

	import java.util.Collections;
import java.io.*;
import java.util.List;

	import java.util.ArrayList;

public interface StreamItParserFETokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int TK_loop = 4;
	int TK_ploop = 5;
	int TK_new = 6;
	int TK_anyorder = 7;
	int TK_atomic = 8;
	int TK_null = 9;
	int TK_boolean = 10;
	int TK_float = 11;
	int TK_bit = 12;
	int TK_int = 13;
	int TK_void = 14;
	int TK_double = 15;
	int TK_complex = 16;
	int TK_struct = 17;
	int TK_if = 18;
	int TK_else = 19;
	int TK_while = 20;
	int TK_for = 21;
	int TK_switch = 22;
	int TK_case = 23;
	int TK_default = 24;
	int TK_break = 25;
	int TK_continue = 26;
	int TK_return = 27;
	int TK_true = 28;
	int TK_false = 29;
	int TK_implements = 30;
	int TK_assert = 31;
	int INCLUDE = 32;
	int ARROW = 33;
	int WS = 34;
	int SL_COMMENT = 35;
	int ML_COMMENT = 36;
	int LPAREN = 37;
	int RPAREN = 38;
	int LCURLY = 39;
	int RCURLY = 40;
	int LSQUARE = 41;
	int RSQUARE = 42;
	int PLUS = 43;
	int PLUS_EQUALS = 44;
	int INCREMENT = 45;
	int MINUS = 46;
	int MINUS_EQUALS = 47;
	int DECREMENT = 48;
	int STAR = 49;
	int STAR_EQUALS = 50;
	int DIV = 51;
	int DIV_EQUALS = 52;
	int MOD = 53;
	int LOGIC_AND = 54;
	int LOGIC_OR = 55;
	int BITWISE_AND = 56;
	int BITWISE_OR = 57;
	int BITWISE_XOR = 58;
	int ASSIGN = 59;
	int EQUAL = 60;
	int NOT_EQUAL = 61;
	int LESS_THAN = 62;
	int LESS_EQUAL = 63;
	int MORE_THAN = 64;
	int MORE_EQUAL = 65;
	int QUESTION = 66;
	int COLON = 67;
	int SEMI = 68;
	int COMMA = 69;
	int DOT = 70;
	int BANG = 71;
	int LSHIFT = 72;
	int RSHIFT = 73;
	int NDVAL = 74;
	int NDVAL2 = 75;
	int SELECT = 76;
	int CHAR_LITERAL = 77;
	int STRING_LITERAL = 78;
	int ESC = 79;
	int DIGIT = 80;
	int HQUAN = 81;
	int NUMBER = 82;
	int ID = 83;
	int TK_pipeline = 84;
	int TK_splitjoin = 85;
	int TK_feedbackloop = 86;
	int TK_sbox = 87;
	int TK_work = 88;
	int TK_prework = 89;
	int TK_phase = 90;
	int TK_push = 91;
	int TK_pop = 92;
	int TK_peek = 93;
	int TK_init = 94;
	int TK_split = 95;
	int TK_join = 96;
	int TK_roundrobin = 97;
	int TK_duplicate = 98;
	int TK_enqueue = 99;
	int TK_portal = 100;
	int TK_handler = 101;
	int TK_do = 102;
	int TK_pi = 103;
}
