// $ANTLR 2.7.4: "StreamItLex.g" -> "StreamItLex.java"$

	package streamit.frontend;

public interface StreamItLexTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int TK_filter = 4;
	int TK_pipeline = 5;
	int TK_splitjoin = 6;
	int TK_feedbackloop = 7;
	int TK_portal = 8;
	int TK_to = 9;
	int TK_handler = 10;
	int TK_add = 11;
	int TK_split = 12;
	int TK_join = 13;
	int TK_duplicate = 14;
	int TK_roundrobin = 15;
	int TK_body = 16;
	int TK_loop = 17;
	int TK_enqueue = 18;
	int TK_init = 19;
	int TK_prework = 20;
	int TK_work = 21;
	int TK_phase = 22;
	int TK_peek = 23;
	int TK_pop = 24;
	int TK_push = 25;
	int TK_boolean = 26;
	int TK_float = 27;
	int TK_bit = 28;
	int TK_int = 29;
	int TK_void = 30;
	int TK_double = 31;
	int TK_complex = 32;
	int TK_struct = 33;
	int TK_template = 34;
	int TK_if = 35;
	int TK_else = 36;
	int TK_while = 37;
	int TK_for = 38;
	int TK_switch = 39;
	int TK_case = 40;
	int TK_default = 41;
	int TK_break = 42;
	int TK_continue = 43;
	int TK_return = 44;
	int TK_pi = 45;
	int TK_true = 46;
	int TK_false = 47;
	int ARROW = 48;
	int WS = 49;
	int SL_COMMENT = 50;
	int ML_COMMENT = 51;
	int LPAREN = 52;
	int RPAREN = 53;
	int LCURLY = 54;
	int RCURLY = 55;
	int LSQUARE = 56;
	int RSQUARE = 57;
	int PLUS = 58;
	int PLUS_EQUALS = 59;
	int INCREMENT = 60;
	int MINUS = 61;
	int MINUS_EQUALS = 62;
	int DECREMENT = 63;
	int STAR = 64;
	int STAR_EQUALS = 65;
	int DIV = 66;
	int DIV_EQUALS = 67;
	int MOD = 68;
	int LOGIC_AND = 69;
	int LOGIC_OR = 70;
	int BITWISE_AND = 71;
	int BITWISE_OR = 72;
	int BITWISE_XOR = 73;
	int ASSIGN = 74;
	int EQUAL = 75;
	int NOT_EQUAL = 76;
	int LESS_THAN = 77;
	int LESS_EQUAL = 78;
	int MORE_THAN = 79;
	int MORE_EQUAL = 80;
	int QUESTION = 81;
	int COLON = 82;
	int SEMI = 83;
	int COMMA = 84;
	int DOT = 85;
	int BANG = 86;
	int CHAR_LITERAL = 87;
	int STRING_LITERAL = 88;
	int ESC = 89;
	int DIGIT = 90;
	int HQUAN = 91;
	int NUMBER = 92;
	int ID = 93;
}
