// $ANTLR 2.7.7 (2006-11-01): "StreamItLex.g" -> "StreamItLex.java"$

	package streamit.frontend.parser;

public interface StreamItLexTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int TK_atomic = 4;
	int TK_fork = 5;
	int TK_insert = 6;
	int TK_into = 7;
	int TK_loop = 8;
	int TK_new = 9;
	int TK_null = 10;
	int TK_reorder = 11;
	int TK_boolean = 12;
	int TK_float = 13;
	int TK_bit = 14;
	int TK_int = 15;
	int TK_void = 16;
	int TK_double = 17;
	int TK_complex = 18;
	int TK_struct = 19;
	int TK_ref = 20;
	int TK_if = 21;
	int TK_else = 22;
	int TK_while = 23;
	int TK_for = 24;
	int TK_switch = 25;
	int TK_case = 26;
	int TK_default = 27;
	int TK_break = 28;
	int TK_continue = 29;
	int TK_return = 30;
	int TK_true = 31;
	int TK_false = 32;
	int TK_implements = 33;
	int TK_assert = 34;
	int TK_static = 35;
	int TK_include = 36;
	int TK_pragma = 37;
	int ARROW = 38;
	int WS = 39;
	int SL_COMMENT = 40;
	int ML_COMMENT = 41;
	int LPAREN = 42;
	int RPAREN = 43;
	int LCURLY = 44;
	int RCURLY = 45;
	int LSQUARE = 46;
	int RSQUARE = 47;
	int PLUS = 48;
	int PLUS_EQUALS = 49;
	int INCREMENT = 50;
	int MINUS = 51;
	int MINUS_EQUALS = 52;
	int DECREMENT = 53;
	int STAR = 54;
	int STAR_EQUALS = 55;
	int DIV = 56;
	int DIV_EQUALS = 57;
	int MOD = 58;
	int LOGIC_AND = 59;
	int LOGIC_OR = 60;
	int BITWISE_AND = 61;
	int BITWISE_OR = 62;
	int BITWISE_XOR = 63;
	int ASSIGN = 64;
	int EQUAL = 65;
	int NOT_EQUAL = 66;
	int LESS_THAN = 67;
	int LESS_EQUAL = 68;
	int MORE_THAN = 69;
	int MORE_EQUAL = 70;
	int QUESTION = 71;
	int COLON = 72;
	int SEMI = 73;
	int COMMA = 74;
	int DOT = 75;
	int BANG = 76;
	int LSHIFT = 77;
	int RSHIFT = 78;
	int NDVAL = 79;
	int NDVAL2 = 80;
	int SELECT = 81;
	int REGEN = 82;
	int CHAR_LITERAL = 83;
	int STRING_LITERAL = 84;
	int ESC = 85;
	int DIGIT = 86;
	int HQUAN = 87;
	int NUMBER = 88;
	int ID = 89;
}
