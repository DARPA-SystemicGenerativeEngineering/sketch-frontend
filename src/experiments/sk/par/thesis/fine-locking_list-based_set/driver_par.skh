bit T () { return 1; }
bit main () implements T {
    Set S = newSet (NEGINF, POSINF);
    bit[NTHREADS*NITEMS] removed = 0;

    assert !add (S, POSINF);
    assert !remove (S, 1);
    assert add (S, 1);
    assert remove (S, 1);
    assert isEmptySet (S);

    fork (int i; NTHREADS) {
        int addKey = i, rmKey = (i+1) % (NTHREADS*NITEMS);

        for (int j = 0; j < NITEMS; ++j) {
            assert add (S, addKey);
            addKey = addKey + NTHREADS;

            removed[rmKey] = remove (S, rmKey);
            rmKey = (rmKey + NTHREADS) % (NTHREADS*NITEMS);
        }
    }

    assert isValidSet (S, NEGINF, POSINF, NNODES);

    for (int k = 0; k < NTHREADS*NITEMS; ++k) {
        if (removed[k]) {
            assert !remove (S, k);
        } else {
            assert !add (S, k);
            assert remove (S, k);
        }
    }

    assert isEmptySet (S);

    return 1;
}