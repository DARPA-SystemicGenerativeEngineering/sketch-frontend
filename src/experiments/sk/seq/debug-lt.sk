int W = 16;
bit [W] most_sig1(bit[W] x) implements simple_most_sig1{
// same sketch as before
    bit[W] tmp=x;
    bit[W] tmp2=x;
    int cnt = 0;
    repeat(??){ 
        if(??){ {| tmp | tmp2 |} = {| tmp | tmp2 |} + ??; }
        if(??){ {| tmp | tmp2 |} = !{| tmp | tmp2 |};  }
        if(??){ {| tmp | tmp2 |} = {| (tmp | tmp2) (& | ^) (tmp | tmp2) |};  }
        cnt = cnt + 1;
        assert cnt <= 3;
    }
    return tmp;
}
bit [W] simple_most_sig1(bit[W] x){    
bit [W] ret = 0;
for (int i = W-1; i >=0; i--)
if (x[ i ]) { ret [ i ] = 1; return ret ; }
return ret ;
}
