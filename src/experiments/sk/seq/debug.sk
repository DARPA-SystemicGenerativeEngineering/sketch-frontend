pragma options "--bnd-unroll-amnt 32 --beopt:simiters 100 --beopt:simstopsize 400  --bnd-inline-amnt 1"; //--be:lightverif

include "string.skh"; 

struct Bidder{
    int trueValue;
    int bid;
}



void auction (int n, Bidder[n] bidders, ref int winner, ref int price)/*auction.sk:9*/
{
  winner = 0;
  Bidder first = bidders[0];
  Bidder second = bidders[1];
  for(int i = 1; i < n; i = i + 1)
  {
    int _out_s8 = second.bid;
    if(_out_s8 > (first.bid))/*auction.sk:26*/
    {
      winner = i;
      second = first;
    }
  }
  price = second.bid;
}


harness void main(int n, int[n] trueValues, int[n] bids){
    
    println(cat(new Str(n=??, s="trueValues = " ), intArrToStr(n, trueValues)));
    println(cat(new Str(n=??, s="bidsValues = " ), intArrToStr(n, bids)));
    
    if(n<2){
        return;
    }
    Bidder[n] bidders;
    int highest = -1;
    Bidder h = null;
    for(int i=0; i<n; ++i){
        bidders[i] = new Bidder(trueValue=trueValues[i], bid=bids[i]);
        if(trueValues[i] == highest){
            return;
        }
        if(trueValues[i] > highest){
            h = bidders[i];
            highest = h.trueValue;
        }            
    }
    int wid;
    int price;
    auction(n, bidders, wid, price);

    //We need to show that if you are the winner, bidding your true value
    //instead of whatever you bidded will always improve your outcome.
    Bidder winner = bidders[wid];
    int utility = winner.trueValue - price;
    assert winner.bid >= price;
    
    println(cat(new Str(n=??, s="winner, price, utility = " ), intArrToStr(3, {wid, price, utility})));
    winner.bid = winner.trueValue;
    int wid2;
    auction(n, bidders, wid2, price);
    if(wid2 != wid){        
        assert utility <= 0;
    }else{
        int utility2 = winner.trueValue - price;
        assert utility2 >= utility;
    }
    
}