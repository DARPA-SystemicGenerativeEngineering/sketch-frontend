int N;

bit[N][N] rbGaussSeidel(bit[N][N] in, bit[N][N] f, bit ce, bit no, bit so, bit ea, bit we){

 bit[N][N] tmp=0;
 bit[N][N] output=0;

 for(int i=1; i<N-1; ++i){
  for(int j=1; j<N-1; ++j){
   if(i%2 == j%2){
    tmp[i][j] = (f[i][j] ) ^ ( ce&in[i][j]) ^ (
    no&in[i-1][j]) ^ (so&in[i+1][j]) ^ (ea&in[i][j+1]) ^ (we&in[i][j-1]);
   }
  }
 }

 for(int i=1; i<N-1; ++i){
  for(int j=1; j<N-1; ++j){
   if(!(i%2 == j%2)){
    output[i][j] = ( f[i][j] ) ^ ( ce&in[i][j]) ^ (
    no&tmp[i-1][j]) ^ (so&tmp[i+1][j]) ^ (ea&tmp[i][j+1]) ^ (we&tmp[i][j-1] );
   }else{
    output[i][j] = tmp[i][j];
   }
  }
 }
 return output;
}





bit[N][N] rbGaussSeidelSK(bit[N][N] in, bit[N][N] f, bit ce, bit no, bit so, bit ea, bit we) implements rbGaussSeidel{

 bit[N][N] O1=0;
 for(int j=1; j<N/2; ++j){

   { int ta; ta=??; int tb; tb=2*j-1; O1[??][2*j-1] = f[ta][tb] ^ ( ce&in[ta][tb]) ^ ( no&in[ta-1][tb] ) ^ (so&in[ta+1][tb]) ^ (ea&in[ta][tb+1]) ^ (we&in[ta][tb-1] ); };
   { int ta; ta=??; int tb; tb=2*j; O1[??][2*j] = f[ta][tb] ^ ( ce&in[ta][tb]) ^ ( no&in[ta-1][tb] ) ^ (so&in[ta+1][tb]) ^ (ea&in[ta][tb+1]) ^ (we&in[ta][tb-1] ); };
 }
 bit[N][N] O2;
 O2=O1;
 if( N % 2 == 1){

   { int ta; ta=??; int tb; tb=N-??; O2[??][N-??] = f[ta][tb] ^ ( ce&in[ta][tb]) ^ ( no&in[ta-1][tb] ) ^ (so&in[ta+1][tb]) ^ (ea&in[ta][tb+1]) ^ (we&in[ta][tb-1] ); };
   { int ta; ta=??; int tb; tb=N-??; O2[??][N-??] = f[ta][tb] ^ ( ce&in[ta][tb]) ^ ( no&in[ta-1][tb] ) ^ (so&in[ta+1][tb]) ^ (ea&in[ta][tb+1]) ^ (we&in[ta][tb-1] ); };
 }
 bit[N][N] O3;
 O3 = O2;
 for(int i=??; i<N/2; ++i){
  for(int j=??; j<N/2; ++j){

   { int ta; ta=2*i-1; int tb; tb=2*j-1; O3[2*i-1][2*j-1] = f[ta][tb] ^ ( ce&in[ta][tb]) ^ ( no&in[ta-1][tb] ) ^ (so&in[ta+1][tb]) ^ (ea&in[ta][tb+1]) ^ (we&in[ta][tb-1] ); };
   { int ta; ta=2*i; int tb; tb=2*j; O3[2*i][2*j] = f[ta][tb] ^ ( ce&in[ta][tb]) ^ ( no&in[ta-1][tb] ) ^ (so&in[ta+1][tb]) ^ (ea&in[ta][tb+1]) ^ (we&in[ta][tb-1] ); };

   { int ta; ta=2*i-1-2; int tb; tb=2*j; O3[2*i-1-2][2*j] = f[ta][tb] ^ ( ce&in[ta][tb]) ^ ( no&O3[ta-1][tb] ) ^ (so&O3[ta+1][tb]) ^ (ea&O3[ta][tb+1]) ^ (we&O3[ta][tb-1] ); };
   { int ta; ta=2*i-2; int tb; tb=2*j-1; O3[2*i-2][2*j-1] = f[ta][tb] ^ ( ce&in[ta][tb]) ^ ( no&O3[ta-1][tb] ) ^ (so&O3[ta+1][tb]) ^ (ea&O3[ta][tb+1]) ^ (we&O3[ta][tb-1] ); };
  }
  if( N % 2 == 1){

   { int ta; ta=2*i-1; int tb; tb=N-??; O3[2*i-1][N-??] = f[ta][tb] ^ ( ce&in[ta][tb]) ^ ( no&in[ta-1][tb] ) ^ (so&in[ta+1][tb]) ^ (ea&in[ta][tb+1]) ^ (we&in[ta][tb-1] ); };

   { int ta; ta=2*i-2; int tb; tb=N-??; O3[2*i-2][N-??] = f[ta][tb] ^ ( ce&in[ta][tb]) ^ ( no&O3[ta-1][tb] ) ^ (so&O3[ta+1][tb]) ^ (ea&O3[ta][tb+1]) ^ (we&O3[ta][tb-1] ); };
  }
 }
 bit[N][N] O4;
 O4 = O3;
 if( N % 2 == 1){
  for(int j=1; j<N-1; ++j){
   if((N-??)%2 == j%2){
    { int ta; ta=N-??; int tb; tb=j; O4[N-??][j] = f[ta][tb] ^ ( ce&in[ta][tb]) ^ ( no&in[ta-1][tb] ) ^ (so&in[ta+1][tb]) ^ (ea&in[ta][tb+1]) ^ (we&in[ta][tb-1] ); };
   }else{
    { int ta; ta=N-??; int tb; tb=j; O4[N-??][j] = f[ta][tb] ^ ( ce&in[ta][tb]) ^ ( no&O4[ta-1][tb] ) ^ (so&O4[ta+1][tb]) ^ (ea&O4[ta][tb+1]) ^ (we&O4[ta][tb-1] ); };
   }
  }
 }
 bit[N][N] O5;
 O5 = O4;
 for(int j=1; j<N/2; ++j){

   { int ta; ta=N-??; int tb; tb=2*j-1; O5[N-??][2*j-1] = f[ta][tb] ^ ( ce&in[ta][tb]) ^ ( no&O5[ta-1][tb] ) ^ (so&O5[ta+1][tb]) ^ (ea&O5[ta][tb+1]) ^ (we&O5[ta][tb-1] ); };
   { int ta; ta=N-??; int tb; tb=2*j; O5[N-??][2*j] = f[ta][tb] ^ ( ce&in[ta][tb]) ^ ( no&O5[ta-1][tb] ) ^ (so&O5[ta+1][tb]) ^ (ea&O5[ta][tb+1]) ^ (we&O5[ta][tb-1] ); };
 }
 if( N % 2 == 1){

  { int ta; ta=N-??; int tb; tb=N-??; O5[N-??][N-??] = f[ta][tb] ^ ( ce&in[ta][tb]) ^ ( no&O5[ta-1][tb] ) ^ (so&O5[ta+1][tb]) ^ (ea&O5[ta][tb+1]) ^ (we&O5[ta][tb-1] ); };
 }
 return O5;
}
