include "options.skh";
//how to tackle big numbers? -- doesn't work for 4 bit inputs
//Primality check

//binary-search based sqrt
int sqrt(int num){
    if (num==1) return 1;
    int low=0;
    int mid;//,square;
    int high=1+(num/2);
    while (low+1<high){
        mid=low+(high-low)/2;
        //square=mid*mid;
        if (num %mid == 0 && num/mid == mid)//num == mid*mid
            return mid;
        else if (mid<=num/mid)//mid*mid < num
            low=mid;
        else
            high=mid;
    }
    return low;
}

bit primality_spec(int p){
	if(p<=1) return 0;
	for(int i=2;i<p;i++){
		if(p%i == 0) return 0;
	}
	return 1;
}
bit primality_sketch(int p) implements primality_spec{
	if(p<=1) return 0;
	for(int i=2;{| i (< | > | <= | >=) sqrt({| (??%2)*p (+|-) (??%2) |}) |};i++){
		if(p%i == 0) return 0;
	}
	return 1;
}
