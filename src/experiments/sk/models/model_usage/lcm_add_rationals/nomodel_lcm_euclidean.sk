include "options.skh";

harness void rational_add(int a, int b, int c, int d){
	if(b == 0 || d == 0) return;
	int denominator = lcm(b,d);
	int numerator = a * denominator/b + c*denominator/d;
	assert numerator * b * d == denominator * (a * d + b * c);
}

/*
int lcm_naive(int a, int b){
 if(a==0 || b==0)
  return 0;
  int res = a*b;
 for(int i=a*b-1; i>=1; i--){
 if(i%a ==0 && i%b ==0)
  res = i;
}
return res;
}
*/

int lcm(int a, int b){
 return a * b / gcd(a,b);
}

int gcd(int a, int b){
if(a==0) return b;
while(b != 0){
 if(a>b) a = a - b;
 else b = b - a;
}
return a;
}
