include "options.skh";

bit disableAssert = 0;

include "../../lcm_model_old_cegis.skh";

int N = 5;

// synthesize algorithm for computing lcm of N numbers
harness void multi_lcm(int[N] nums){
	
	for(int i=0; i<N; i++)
	  if(nums[i] == 0) return;	
	if(N<2) return;        

	int result = lcm(nums[0], nums[1]);
	if(disableAssert) return;
	for(int i =??; i<{| N | N-1 | N-2 |}; i++){
	  result = lcm({| result | nums[i]|}, {| result | nums[i]|});
	  if(disableAssert) return;
	}


	for(int i=0; i<N; i++)
	 //assert result % nums[i] == 0;
	 guardAssertion(result % nums[i] == 0);
	
	for(int i=1; i < result; i++)
	 {
	  bit divisible = 1;
	  for(int j=0; j<N; j++)
             divisible = divisible && (i % nums[j] == 0);
          //assert !divisible;
		  guardAssertion(!divisible);
	 }

}

void guardAssertion(bit b){
	if(!disableAssert){
		assert b;
	}
}
