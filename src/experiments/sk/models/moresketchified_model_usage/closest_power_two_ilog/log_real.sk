include "generators.skh";
include "options.skh";


int log_linear(int a){
 if(a == 0) return 0;
 for(int i=0; i<a; i++){
 if(pow(2,i) == a) return i;
  if(pow(2,i)>a) return i-1;
 }
}

int log(int a) /* implements log_linear*/{
 if(a == 0) return 0;
 int top = 0;
 int bottom = a;
while({| top (< | <= | > | >= | != | == ) bottom |}){
 int mid = (top + bottom) / 2;
 int val = pow(2,mid);
 if(exprBool(2, {a, val}, 2, {TIMES, PLUS})){ return mid;}
 if(val > a) bottom = linexp(2, {mid,??});
 if(val < a) top = linexp(2, {mid,??});

}	     
}

harness void main(int a){
  int l1 = log(a);

  int l2 = log_linear(a);

  assert l1 < ??;
  assert l2 < ??;

  assert l1 == l2;


}


int pow(int a, int b){
    int result = 1;
    for(int i=0; i<b; i++)
       result = result * a;
    return result;
}
