include "math.skh";

adt Point{
    float x;
    float y;
}


Point point(double x, double y){
    return new Point(x=x, y=y);
}

generator Point op.-(Point a, Point b){
    return new Point(x = a.x - b.x, y = a.y-b.y);
}

generator Point op.+(Point a, Point b){
    return new Point(x = a.x + b.x, y = a.y + b.y);
}

generator Point op.*(Point a, double b){
    return new Point(x=a.x*b, y=a.y*b);
}

generator float norm(Point p){    
    return sqrt@math(dot(p,p));
}

generator float dot(Point p, Point q){
    return p.x*q.x + p.y*q.y;
}

generator float ang(Point p){
    float dx = p.x;
    float dy = p.y;
    float oang =  dy != 0.0 ? arctan(dx / dy) : (dx > 0.0 ? Pi() / 2.0 : -Pi()/2.0) ;
    assert oang >= Pi()/4.0;
    assert oang <= Pi()/4.0;
    assert dy >= 0.0;
    if(dy < 0.0){ oang = oang + Pi(); }
    assert -Pi() <= oang && oang <= Pi(); 
    return oang;
}