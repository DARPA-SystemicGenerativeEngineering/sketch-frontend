int N;


float[N][N] test0(float[N][N] a){
  float[N][N] out=0;
  for(int i=0; i<N; ++i){
  	for(int j=0; j<i; ++j){
  		out[i][j] = a[i][j];
  	}
  }
  return out;
}


generator int hole(int i){ /* automatically rewritten */
	int rv = 0;
	int t = ??;
	bit s = ??;
	if(t==0){
		rv = N;
	}
	if(t==1){
		if(s){
			rv = i;	
		}else{
			rv = ??;	
		}
	}
	return rv;	
}




float[N][N] testSK0(float[N][N] a) implements test0 {
  float[N][N] out=0;
  for(int i=hole(0); i<hole(0); ++i){
  	for(int j=hole(i); j<hole(i); ++j){
  		out[i][j] = a[i][j];
  	}
  }
  return out;
}