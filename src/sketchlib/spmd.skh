#ifndef _SPMD_H
#define _SPMD_H

// need to define SPMD_MAX_BUF_LEN and SPMD_MAX_NPROC before including!

@Native("{ mpiTransfer(size, src_buff, scond, recipient, dest_buff, rcond); }" )
void spmdtransfer(global int size, float [size] src_buff, bit scond, int recipient, ref float [size] dest_buff, bit rcond)
{
  global float [SPMD_MAX_BUF_LEN * SPMD_MAX_NPROC] buf;
  global bit [SPMD_MAX_NPROC] pendingData;

  spmdbarrier();
  assert recipient>=0 && recipient<spmdnproc;
  assert size>0 && size<=SPMD_MAX_BUF_LEN;
  pendingData[spmdpid] = 0;
  spmdbarrier();
  for (int i=0; i<size; ++i) {
    buf[recipient*SPMD_MAX_BUF_LEN + i] = src_buff[i];
  }
  if (scond) {
    assert !pendingData[recipient] : "two senders trying to send to the same recipient!";
    pendingData[recipient] = 1;
  }
  spmdbarrier();
  if (rcond) {
    assert pendingData[spmdpid] : "trying to receive but no one sent!";
    for (int i=0; i<size; ++i) {
      dest_buff[i] = buf[spmdpid*SPMD_MAX_BUF_LEN + i];
    }
  } else {
    assert !pendingData[spmdpid] : "pending data but not receiving!";
  }
}

#endif  //_SPMD_H
