pragma options "--bnd-int-range 32 -V10 --beopt:simiters 100 --spmd-max-nproc 9 --bnd-inbits 4 --bnd-cbits 2 --bnd-unroll-amnt 9 --bnd-inline-amnt 5 --bnd-arr1d-size 9 --bnd-arr-size 9 --be:ufunSymmetry --beopt:simplifycex NOSIM"; //  --be:showDAG
//--fe-trunc-var-arr

// vector transpose
// assuming that nprows == npcols
// initially, we have a row-wise partitioned vector
// after vectr, we get a col-wise partitioned vector

package tests;
// NOTE: how to refer to spmd::some_var if I am not in spmd package?

int SPMD_MAX_NPROC = 9;
int SPMD_MAX_BUF_LEN = 9;
include "spmd.skh";
include "generators.skh";

harness void spmd_vectr(global int nprows, global int npcols, int spmdpid) {
	assume nprows>0 && npcols>0 && nprows*npcols <= SPMD_MAX_NPROC;

	assume nprows == npcols;

	// why don't we use npcols? because nprows==npcols in this case
	// when npcols == nprows*2, we should still stick to a row partition first, and peer = (spmdpid/2)%nprows*nprows+spmdpid/2/nprows + spmdpid%2
	int peer = (spmdpid%nprows)*nprows + spmdpid/nprows;
	//int cost = 0;
	int peer2 = expr(3, {spmdpid, nprows, npcols}, 4, {PLUS, TIMES, DIV, MOD});
	assert peer == peer2;
}


