pragma options "-V10 --beopt:simiters 100 --fe-trunc-var-arr --spmd-max-nproc 2 --bnd-inbits 3 --bnd-cbits 2 --bnd-unroll-amnt 16 --bnd-inline-amnt 16 --bnd-arr1d-size 16 --bnd-arr-size 32 --be:ufunSymmetry --beopt:simplifycex NOSIM"; //  --be:showDAG

package npb;

int SPMD_MAX_NPROC = 2;
include "spmd.skh";

struct LStateV {
	int firstcol;
	int lastcol;
	double[lastcol-firstcol+1] r;
}

bit powerOf2(int n) {
	if (n > 0) {
		while (n > 1) {
			if (n % 2 != 0) {
				return false;
			}
			n = n / 2;
		}
		return true;
	} else {
		return false;
	}
}

void spec_rnorm(int ncols, double[ncols] r, ref double result) {
	assume powerOf2(ncols);
	result = 0.0;
	for (int i=0; i<ncols; i++) {
		result = result + r[i] * r[i];
	}
}

void sk1_rnorm(int ncols, double[ncols] r, ref double result) implements spec_rnorm {
	result = r[??]*r[??];
	for (int i=??; i<ncols; i++) {
		result = result + r[i] * r[i];
	}
}
